// Reversed by pbd (https://github.com/rsc-dev/pbd)
syntax = "proto2";

// Package not defined

enum PbDataType {
	UNDEFINED = 0;
	INHERITED = 1;
	ENUM = 2;
	MILLIS = 3;
	SECOND = 4;
	MINUTE = 5;
	HOUR = 6;
	HOURS = 7;
	DAY = 8;
	MONTH = 9;
	YEAR = 10;
	WEIGHT = 11;
	HEIGHT = 12;
	VO2MAX = 13;
	HEARTRATE = 20;
	HR_PERCENT = 21;
	HR_RESERVE = 22;
	SPEED = 23;
	CADENCE = 24;
	ALTITUDE = 25;
	POWER = 26;
	POWER_LRB = 27;
	POWER_PI = 28;
	TEMPERATURE = 29;
	ACTIVITY = 30;
	STRIDE_LENGTH = 31;
	INCLINE = 32;
	DECLINE = 33;
	DISTANCE = 52;
	ENERGY = 53;
	FAT_PERCENTS = 54;
	ASCENT = 55;
	DESCENT = 56;
	LATITUDE = 57;
	LONGITUDE = 58;
	HERTZ = 59;
	PERCENT = 60;
	CUMULATED_ACTIVITY_DAY = 61;
	RUNNING_INDEX = 62;
	RR_INTERVAL = 63;
	Z_INDEX = 64;
	EXERCISE_TARGET_INDEX = 65;
	TIME_ZONE_OFFSET = 66;
	WHEEL_SIZE = 67;
	FITNESS_CLASS = 68;
	ACCELERATION = 69;
	CRANK_LENGTH = 70;
	ANGLE_DEGREE = 71;
	NEWTON = 72;
	FUNCTIONAL_THRESHOLD_POWER = 73;
	CALORIES = 74;
	SPEED_CALIBRATION_OFFSET = 75;
	WEEK = 76;
	CARDIO_LOAD = 77;
	MAXIMUM_AEROBIC_POWER = 78;
	MAXIMUM_AEROBIC_SPEED = 79;
	MUSCLE_LOAD = 80;
	PERCEIVED_LOAD = 81;
}

enum PbHeartRateView {
	HEART_RATE_VIEW_BPM = 1;
	HEART_RATE_VIEW_PERCENTS_OF_HR_RESERVE = 2;
	HEART_RATE_VIEW_PERCENTS_OF_MAX_HR = 3;
}

enum PbUnitSystem {
	METRIC = 1;
	IMPERIAL = 2;
}

enum PbTimeSelection {
	TIME_1 = 1;
	TIME_2 = 2;
}

enum PbTimeFormat {
	TIME_FORMAT_24H = 1;
	TIME_FORMAT_12H = 2;
}

enum PbTimeFormatSeparator {
	TIME_FORMAT_SEPARATOR_DOT = 1;
	TIME_FORMAT_SEPARATOR_COLON = 2;
}

enum PbStartDayOfWeek {
	MONDAY = 1;
	SATURDAY = 2;
	SUNDAY = 3;
}

enum PbDateFormatSeparator {
	DOT = 1;
	SLASH = 2;
	HYPHEN = 3;
}

enum PbDateFormat {
	DD_MM_YYYY = 1;
	MM_DD_YYYY = 2;
	YYYY_MM_DD = 3;
}

enum PbFeatureType {
	FEATURE_TYPE_HEART_RATE = 1;
	FEATURE_TYPE_RR_INTERVAL = 2;
	FEATURE_TYPE_SPEED = 3;
	FEATURE_TYPE_DISTANCE = 4;
	FEATURE_TYPE_BIKE_CADENCE = 5;
	FEATURE_TYPE_BIKE_POWER = 6;
	FEATURE_TYPE_GPS_LOCATION = 7;
	FEATURE_TYPE_RUNNING_CADENCE = 8;
	FEATURE_TYPE_PRESS_TEMPERATURE = 9;
	FEATURE_TYPE_ALTITUDE = 10;
	FEATURE_TYPE_STEPS = 11;
	FEATURE_TYPE_ACTIVITY = 12;
	FEATURE_TYPE_STRIDE_LENGTH = 13;
	FEATURE_TYPE_RSC_MOVING_TYPE = 14;
	FEATURE_TYPE_JUMP_HEIGTH = 15;
	FEATURE_TYPE_COMPASS_HEADING = 16;
	FEATURE_TYPE_GPS_SPEED = 17;
	FEATURE_TYPE_GPS_DISTANCE = 18;
	FEATURE_TYPE_GPS_ALTITUDE = 19;
	FEATURE_TYPE_BIKE_WHEEL_REVOLUTION = 20;
	FEATURE_TYPE_BIKE_CRANK_REVOLUTION = 21;
	FEATURE_TYPE_AS_SPEED = 22;
	FEATURE_TYPE_AS_CADENCE = 23;
	FEATURE_TYPE_AS_DISTANCE = 24;
	FEATURE_TYPE_AS_SWR_STATE = 25;
	FEATURE_TYPE_BATTERY_LEVEL = 26;
	FEATURE_TYPE_FILE_TRANSFER = 27;
	FEATURE_TYPE_PUSH_NOTIFICATIONS = 28;
	FEATURE_TYPE_WEIGHT_SCALE = 29;
	FEATURE_TYPE_REMOTE_BUTTONS = 30;
	FEATURE_TYPE_GOPRO = 31;
	FEATURE_TYPE_PP_INTERVAL = 32;
}

enum PbMovingType {
	WALKING = 0;
	RUNNING = 1;
	STANDING = 2;
}

enum PbOperationType {
	MULTIPLY = 1;
	SUM = 2;
}

enum PbExerciseFeedback {
	FEEDBACK_NONE = 1;
	FEEDBACK_1 = 2;
	FEEDBACK_2 = 3;
	FEEDBACK_3 = 4;
	FEEDBACK_4 = 5;
	FEEDBACK_5 = 6;
	FEEDBACK_6 = 7;
	FEEDBACK_7 = 8;
	FEEDBACK_8 = 9;
	FEEDBACK_9 = 10;
	FEEDBACK_10 = 11;
	FEEDBACK_11 = 12;
	FEEDBACK_12 = 13;
	FEEDBACK_13 = 14;
	FEEDBACK_14 = 15;
	FEEDBACK_15 = 16;
	FEEDBACK_16 = 17;
	FEEDBACK_17 = 18;
}

enum PbHeartRateZoneSettingSource {
	HEART_RATE_ZONE_SETTING_SOURCE_DEFAULT = 0;
	HEART_RATE_ZONE_SETTING_SOURCE_THRESHOLD = 1;
	HEART_RATE_ZONE_SETTING_SOURCE_FREE = 2;
}

enum PbPowerZoneSettingSource {
	POWER_ZONE_SETTING_SOURCE_DEFAULT = 0;
	POWER_ZONE_SETTING_SOURCE_FREE = 1;
}

enum PbSpeedZoneSettingSource {
	SPEED_ZONE_SETTING_SOURCE_DEFAULT = 0;
	SPEED_ZONE_SETTING_SOURCE_FREE = 1;
}

enum PbMacType {
	MAC_TYPE_PUBLIC = 0;
	MAC_TYPE_STATIC = 1;
	MAC_TYPE_PRIVATE_NONRESOLVABLE = 2;
	MAC_TYPE_PRIVATE_RESOLVABLE = 3;
	MAC_TYPE_BT_CLASSIC = 4;
}

enum PbSwimmingStyle {
	OTHER = -1;
	TURN = 0;
	OTHER_SWIMMING = 10;
	FREESTYLE = 11;
	BREASTSTROKE = 12;
	BACKSTROKE = 13;
	BUTTERFLY = 14;
	DRILL = 15;
}

enum PbSwimmingPoolUnits {
	SWIMMING_POOL_METERS = 0;
	SWIMMING_POOL_YARDS = 1;
}

enum PbExerciseTargetType {
	EXERCISE_TARGET_TYPE_FREE = 0;
	EXERCISE_TARGET_TYPE_VOLUME = 1;
	EXERCISE_TARGET_TYPE_PHASED = 2;
	EXERCISE_TARGET_TYPE_ROUTE = 3;
	EXERCISE_TARGET_TYPE_STEADY_RACE_PACE = 4;
	EXERCISE_TARGET_TYPE_ROUTE_RACE_PACE = 5;
	EXERCISE_TARGET_TYPE_STRAVA_SEGMENT = 6;
	EXERCISE_TARGET_TYPE_STRENGTH_TRAINING = 7;
}

enum Buttons {
	BUTTON_PLUS = 0;
	BUTTON_MINUS = 1;
	BUTTON_OK = 2;
	BUTTON_LIGHT = 3;
	BUTTON_BACK = 4;
}

enum ButtonState {
	BUTTON_PRESSED = 0;
	BUTTON_RELEASED = 1;
}

enum PbSampleType {
	SAMPLE_TYPE_UNDEFINED = 0;
	SAMPLE_TYPE_HEART_RATE = 1;
	SAMPLE_TYPE_CADENCE = 2;
	SAMPLE_TYPE_ALTITUDE = 3;
	SAMPLE_TYPE_ALTITUDE_CALIBRATION = 4;
	SAMPLE_TYPE_TEMPERATURE = 5;
	SAMPLE_TYPE_SPEED = 6;
	SAMPLE_TYPE_DISTANCE = 7;
	SAMPLE_TYPE_STRIDE_LENGTH = 8;
	SAMPLE_TYPE_STRIDE_CALIBRATION = 9;
	SAMPLE_TYPE_FORWARD_ACCELERATION = 10;
	SAMPLE_TYPE_MOVING_TYPE = 11;
	SAMPLE_TYPE_LEFT_PEDAL_POWER = 12;
	SAMPLE_TYPE_RIGHT_PEDAL_POWER = 13;
	SAMPLE_TYPE_LEFT_PEDAL_POWER_CALIBRATION = 14;
	SAMPLE_TYPE_RIGHT_PEDAL_POWER_CALIBRATION = 15;
	SAMPLE_TYPE_RR_INTERVAL = 16;
	SAMPLE_TYPE_ACCELERATION_MAD = 17;
}

enum PbSampleSourceType {
	SAMPLE_SOURCE_TYPE_UNDEFINED = 0;
	SAMPLE_SOURCE_TYPE_OFFLINE = 1;
	SAMPLE_SOURCE_TYPE_HEART_RATE = 2;
	SAMPLE_SOURCE_TYPE_HEART_RATE_BLE = 3;
	SAMPLE_SOURCE_TYPE_HEART_RATE_5_KHZ = 4;
	SAMPLE_SOURCE_TYPE_HEART_RATE_OPTICAL = 5;
	SAMPLE_SOURCE_TYPE_GPS = 6;
	SAMPLE_SOURCE_TYPE_STRIDE = 7;
	SAMPLE_SOURCE_TYPE_WRIST_METRICS = 8;
	SAMPLE_SOURCE_TYPE_CHEST_METRICS = 9;
	SAMPLE_SOURCE_TYPE_BIKE_PEDAL = 10;
	SAMPLE_SOURCE_TYPE_BIKE_WHEEL = 11;
	SAMPLE_SOURCE_TYPE_BIKE_CRANK = 12;
	SAMPLE_SOURCE_TYPE_COMBINED_CHEST_METRICS_AND_GPS = 13;
	SAMPLE_SOURCE_TYPE_UPPER_BACK_METRICS = 14;
	SAMPLE_SOURCE_TYPE_COMBINED_UPPER_BACK_METRICS_AND_GPS = 15;
}

enum PbAltitudeSetting {
	ALTITUDE_OFF = 0;
	ALTITUDE_ON = 1;
}

enum PbGPSSetting {
	GPS_OFF = 0;
	GPS_ON_NORMAL = 1;
	GPS_ON_LONG = 2;
	GPS_ON_10_HZ = 3;
	GPS_ON_MEDIUM = 4;
}

enum PbHeartTouch {
	HEART_TOUCH_OFF = 1;
	HEART_TOUCH_ACTIVATE_BACKLIGHT = 2;
	HEART_TOUCH_SHOW_PREVIOUS_LAP = 3;
	HEART_TOUCH_SHOW_TIME_OF_DAY = 4;
}

enum PbTapButtonAction {
	TAP_BUTTON_OFF = 1;
	TAP_BUTTON_TAKE_LAP = 2;
	TAP_BUTTON_CHANGE_TRAINING_VIEW = 3;
	TAP_BUTTON_ACTIVATE_BACKLIGHT = 4;
}

enum PbHandedness {
	WU_IN_LEFT_HAND = 1;
	WU_IN_RIGHT_HAND = 2;
	WU_IN_NECKLACE = 3;
}

enum PbDeviceLocation {
	DEVICE_LOCATION_UNDEFINED = 0;
	DEVICE_LOCATION_OTHER = 1;
	DEVICE_LOCATION_WRIST_LEFT = 2;
	DEVICE_LOCATION_WRIST_RIGHT = 3;
	DEVICE_LOCATION_NECKLACE = 4;
	DEVICE_LOCATION_CHEST = 5;
	DEVICE_LOCATION_UPPER_BACK = 6;
	DEVICE_LOCATION_FOOT_LEFT = 7;
	DEVICE_LOCATION_FOOT_RIGHT = 8;
	DEVICE_LOCATION_LOWER_ARM_LEFT = 9;
	DEVICE_LOCATION_LOWER_ARM_RIGHT = 10;
	DEVICE_LOCATION_UPPER_ARM_LEFT = 11;
	DEVICE_LOCATION_UPPER_ARM_RIGHT = 12;
	DEVICE_LOCATION_BIKE_MOUNT = 13;
}

enum PbSessionRPE {
	RPE_NONE = 1;
	RPE_EASY = 2;
	RPE_LIGHT = 3;
	RPE_FAIRLY_BRISK = 4;
	RPE_BRISK = 5;
	RPE_MODERATE = 6;
	RPE_FAIRLY_HARD = 7;
	RPE_HARD = 8;
	RPE_EXHAUSTING = 9;
	RPE_EXTREME = 10;
}

enum PbMuscleSoreness {
	MS_UNDEFINED = -1;
	MS_NONE = 0;
	MS_SOME = 1;
	MS_MUCH = 2;
}

enum PbOverallFatigue {
	OF_UNDEFINED = -1;
	OF_NORMAL = 0;
	OF_A_LITTLE = 1;
	OF_MUCH = 2;
}

enum PbSleepUserRating {
	PB_SLEPT_UNDEFINED = -1;
	PB_SLEPT_POORLY = 0;
	PB_SLEPT_SOMEWHAT_POORLY = 1;
	PB_SLEPT_NEITHER_POORLY_NOR_WELL = 2;
	PB_SLEPT_SOMEWHAT_WELL = 3;
	PB_SLEPT_WELL = 4;
}

enum PbDailyBalanceFeedback {
	DB_NOT_CALCULATED = -1;
	DB_SICK = 0;
	DB_FATIGUE_TRY_TO_REDUCE_TRAINING_LOAD_INJURED = 1;
	DB_FATIGUE_TRY_TO_REDUCE_TRAINING_LOAD = 2;
	DB_LIMITED_TRAINING_RESPONSE_OTHER_INJURED = 3;
	DB_LIMITED_TRAINING_RESPONSE_OTHER = 4;
	DB_RESPONDING_WELL_CAN_CONTINUE_IF_INJURY_ALLOWS = 5;
	DB_RESPONDING_WELL_CAN_CONTINUE = 6;
	DB_YOU_COULD_DO_MORE_TRAINING_IF_INJURY_ALLOWS = 7;
	DB_YOU_COULD_DO_MORE_TRAINING = 8;
	DB_YOU_SEEM_TO_BE_STRAINED_INJURED = 9;
	DB_YOU_SEEM_TO_BE_STRAINED = 10;
}

enum PbStrengthTrainingRoundRepetitionType {
	NORMAL = 0;
}

enum PbStrengthTrainingWorkoutPhase {
	WORK = 0;
	WARM_UP = 1;
	COOL_DOWN = 2;
}

message PbRangeOptions {
	optional int32 min_value = 1 ;
	optional int32 max_value = 2 ;
}

message PbDate {
	required uint32 year = 1 ;
	required uint32 month = 2 ;
	required uint32 day = 3 ;
}

message PbTime {
	required uint32 hour = 1 ;
	required uint32 minute = 2 ;
	required uint32 seconds = 3 ;
	optional uint32 millis = 4 [default = 0];
}

message PbSystemDateTime {
	required .PbDate date = 1 ;
	required .PbTime time = 2 ;
	required bool trusted = 3 ;
}

message PbLocalDateTime {
	required .PbDate date = 1 ;
	required .PbTime time = 2 ;
	required bool OBSOLETE_trusted = 3 ;
	optional int32 time_zone_offset = 4 ;
}

message PbDuration {
	optional uint32 hours = 1 [default = 0];
	optional uint32 minutes = 2 [default = 0];
	optional uint32 seconds = 3 [default = 0];
	optional uint32 millis = 4 [default = 0];
}

message PbLocation {
	required double latitude = 1 ;
	required double longitude = 2 ;
	optional .PbSystemDateTime timestamp = 3 ;
	optional .PbLocation.Fix fix = 4 [default = FIX_NONE];
	optional uint32 satellites = 5 [default = 0];
	
	enum Fix {
		FIX_NONE = 0;
		FIX_2D = 1;
		FIX_3D = 2;
	}
}

message PbSensorOffline {
	required uint32 start_index = 1 ;
	required uint32 stop_index = 2 ;
}

message PbVolume {
	required uint32 volume = 1 ;
}

message PbStrideSensorCalibSettings {
	required float running_factor = 1 ;
	required .PbStrideSensorCalibSettings.PbStrideCalibType calib_type = 2 ;
	optional .PbStrideSensorCalibSettings.PbRunningFactorSource running_factor_source = 3 [default = RUNNING_FACTOR_SOURCE_DEFAULT];
	
	enum PbStrideCalibType {
		STRIDE_CALIB_MANUAL = 0;
		STRIDE_CALIB_AUTO = 1;
	}
	
	enum PbRunningFactorSource {
		RUNNING_FACTOR_SOURCE_DEFAULT = 0;
		RUNNING_FACTOR_SOURCE_AUTO_CALIBRATION = 1;
		RUNNING_FACTOR_SOURCE_MANUAL_CALIBRATION = 2;
	}
}

message PbWeek {
	required uint32 week_number_ISO8601 = 1 ;
	required uint32 year = 2 ;
	required int32 time_zone_offset = 3 ;
	required .PbStartDayOfWeek week_start_day = 4 ;
}

message PbSampleSource {
	required .PbSampleSourceType sample_source_type = 1 ;
	required uint32 start_index = 2 ;
	required uint32 stop_index = 3 ;
}

message PbSensorCalibrationOffset {
	required .PbSampleSourceType sample_source_type = 1 ;
	optional float speed_cal_offset = 2 ;
}

message PbCalibrationSettings {
	required .PbSampleType sample_type = 1 ;
	optional bool calibration_enabled = 2 ;
	optional bool calibration_calculation_enabled = 3 ;
}

message PbAccelerationMetrics {
	required .PbSampleSourceType sample_source_type = 1 ;
	repeated .PbCalibrationSettings calibration_settings = 2 ;
}

message PbAutoPause {
	required .PbAutoPause.PbAutoPauseTrigger trigger = 1 ;
	optional float speed_threshold = 2 ;
	
	enum PbAutoPauseTrigger {
		AUTO_PAUSE_OFF = 0;
		AUTO_PAUSE_TRIGGER_SPEED = 1;
	}
}

message PbAutoLapSettings {
	required .PbAutoLapSettings.PbAutomaticLap automatic_lap = 1 ;
	optional float automatic_lap_distance = 2 ;
	optional .PbDuration automatic_lap_duration = 3 ;
	
	enum PbAutomaticLap {
		AUTOMATIC_LAP_OFF = 1;
		AUTOMATIC_LAP_DISTANCE = 2;
		AUTOMATIC_LAP_DURATION = 3;
		AUTOMATIC_LAP_LOCATION = 4;
	}
}

message PbCardioLoad {
	required float activity_load = 1 ;
	required float exercise_load = 2 ;
}

message PbPerceivedLoad {
	required .PbSessionRPE session_rpe = 1 [default = RPE_MODERATE];
	required uint32 duration = 2 ;
}